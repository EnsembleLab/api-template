FORMAT: 1A
HOST: http://private-225f59-sniper1.apiary-mock.com/

# Snipe

Snipe is an API backend for the Snipe Marketplace

## Authentication [/auth]

### Register [POST /auth/register] 

+ Request (application/json)

        {
            "firstname": "John",
            "lastname": "Doe",
            "phonenumber": "+2348077788899",
            "email": "john@doe.com",
            "password": "theSafePa$$w0rd$$555//"
        }

+ Response 200 (application/json)
        
        {
            "status": "success",
            "data": {
                "firstname": "John",
                "lastname": "Doe",
                "phonenumber": "+2348077788899",
                "email": "john@doe.com"
            }
        }
        
### Reset Password [POST /auth/resetpassword]

+ Request (application/json)

        {
            "email": "john@doe.com",
            "oldPassword": "theSafePa$$w0rd$$555//", // (optional)
            "password": "theSafePa$$w0rd$$555//",
            "confirmPassword": "theSafePa$$w0rd$$555//"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Verification email sent. or Password changed."
            }
        }
        
### Verify Password Reset [GET /auth/verifyresetpassword/:hash]
Do html redirect to the password reset successful page

+ Parameters
    + hash: "2d3343ae567c8f8a0b9e8f" (string, required) - verification hash from password reset verification email.

+ Response 200 (text/html)
        
### Log In [POST]

+ Request (application/json)

        {
            "email": "john@doe.com",
            "password": "theSafePa$$w0rd$$555//",
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "accessToken": "2d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                "expiry": "3600",
                "refreshToken": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                "x-tag": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f/=="
            }
        }
        
### Log Out [GET /auth/logout]
Note: Do html redirect to the password reset successful page and kill the active access token and refresh tokens


+ Response 200 (text/html)
        
### Deactivate [GET /auth/deactivate/:user_id]

+ Parameter
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user to be deactivated

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f // This token must be of an administrator or the user to be deactivated

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "User deactivated."
            }
        }

## User Management [/users]

### View Users [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    }
                ]
            }
        }
        
### View User [GET /users/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }]
            }
        }
    
### Update User [PUT /users/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }]
            }
        }
        
### Filter Users [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + email: "foo@joo.com" (String)  - Email of the user
    + firstname: "Foo" (String)  - First name of the user
    + lastname: "John" (String)  - Last name of the user
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    }
                ]
            }
        }
        
### Export Users [GET /users/export]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + email: "foo@joo.com" (String)  - Email of the user
    + firstname: "Foo" (String)  - First name of the user
    + lastname: "John" (String)  - Last name of the user
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (text/csv)
        
### Invite Friends [GET /users/invite]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Request (application/json)

        [
            {
                "email": "john@doe.com"
            },
            {
                "email": "john2@doe.com"
            }
        ]

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Invitation sent."
            }
        }
        
## File Management [/files]
        
### View User Files [GET /files/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "url": "https://foo.com/asset.png"
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "url": "https://foo.com/asset.png"
                    }
                ]
            }
        }
        
### View User File [GET /files/:user_id/:file_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
### View File [GET /files/:user_id/:file_id/file]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
### View Files [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "url": "https://foo.com/asset.png"
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "url": "https://foo.com/asset.png"
                    }
                ]
            }
        }
        
### Add User File [POST]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Request (application/json)

        {
            "url": "https://foo.com/asset.png"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
### Update User File [PUT /files/:file_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
## Notifications [/notifications]
        
### View Notifications [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "content": "This is a message",
                        "destination": "fio@yahoo.com",
                        "type": "email",
                        "is_opened": true
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "content": "this is another message",
                        "destination": "3456789876533",
                        "type": "push",
                        "is_opened": false
                    }
                ]
            }
        }
        
### View Notification [GET /notifications/:notification_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + notification_id: "10" (Number) - ID if notification to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "content": "This is a message",
                "destination": "fio@yahoo.com",
                "type": "email",
                "is_opened": true
            }
        }
        
## Bookings [/bookings]

### View Bookings [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                [
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "pending",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "completed",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "canceled",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "ongoing",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    }
                ]
            }
        }
            
### View Booking [GET /bookings/:booking_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "amount": 2000,
                "data": {
                    "kitchen": 1,
                    "livingRoom": 1,
                    "bedroom": 3,
                    "bathroom": 1,
                    "cupboard": 1
                },
                "statu": "ongoing",
                "payments": [
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "completed",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    },
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "pending",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    }
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "processing",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    }
                ]
            }
        }
        
### Complete Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Filter Bookings [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### New Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Copy Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Cancel Booking Subscription [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Assign Worker to Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Pay for a Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Rate and Write a Review for a Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Export Bookings [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Pay Worker for Bookings [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Recommend Worker for a Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Get Customer Details for a Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Get Worker Details for a Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Reporting [/reporting]
        
### View Report [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Collaboration [/collaboration]
        
### Invite Team Member [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Access Management [/accessmanagement]
        
### View Roles [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Assign Role [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### View Role [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Update Role [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Add Permissions to Role [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
### Remove Permissions From Role [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Payment Page [/paymentpage]
        
### Payment Page [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]